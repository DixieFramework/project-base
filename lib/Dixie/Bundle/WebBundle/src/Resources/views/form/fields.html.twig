{# vendor/symfony/twig-bridge/Resources/views/Form #}
{% extends 'bootstrap_5_layout.html.twig' %}

{# override password widget with an addon to show or hide the password within jQuery #}
{% block password_widget -%}
    {% set is_strength = 'password-strength' in attr.class|default('') %}
    {% if (is_strength) %}
        {% set attr = attr|default({})|merge({'data-url': url('ajax_password'), 'data-strength': '%talav_user.password_strength_level%'}) %}
    {% endif %}
    <div class="input-group">
        <div class="input-group-text">
            <i class="fa-fw fa-solid fa-lock"></i>
        </div>
        {{ parent() }}
        <div class="input-group-text btn btn-password btn-outline-secondary{% if not value %} disabled{% endif %}" title="{{ 'common.toggle_password'|trans }}">
            <i class="fa-fw fa-regular fa-eye"></i>
        </div>
    </div>
    {% if (is_strength) %}
        <div id="{{ form.vars.id }}_passwordStrength" class="password-strength-container d-print-none" style="margin-left: 46px; margin-right: 46px;"></div>
    {%- endif %}
{%- endblock %}

{# plain widget text #}
{% block plain_label -%}
{%- set element = 'span' -%}
{{ block('form_label') }}
{%- endblock %}

{% block plain_widget -%}
{% set display_value = display_value|default('&nbsp;') %}
{% if expanded %}
    {% set class = (attr.class|default('') ~ ' form-control-plaintext form-control-readonly')|trim %}
    <div class="{{ class }}"{% if not hidden_input %}{{ block('widget_container_attributes') }}{% endif %}>
        <span{% if text_class %} class="{{ text_class }}"{% endif %}>{{ display_value|raw }}</span>
    </div>
{% else %}
    <span>{{ display_value|raw }}</span>
{% endif %}
{% if hidden_input %}
    {{ block('hidden_widget') }}
{% endif %}
{%- endblock %}

{# color widget #}
{% block color_widget -%}
{%- if 'color-picker' in attr.class|default('') -%}
    {%- set type = type|default('color') -%}
    {%- set attr = attr|default({})|merge({
        'tabindex': -1,
        'style': 'display:table-column',
        'class': (required ? ' must-validate' : ''),
        'data-custom-text': 'color_picker.custom_text'|trans,
        'data-advanced-text': 'color_picker.advanced_text'|trans
    }) -%}
    <button type="button" role="combobox" class="color-picker dropdown-toggle form-control d-flex align-items-center" data-bs-toggle="dropdown" aria-expanded="false">
        <span class="dropdown-color border" style="background-color: {{ value|default('#000000') }}"></span>
        <span class="dropdown-text flex-fill text-start"></span>
    </button>
    <div class="color-picker dropdown-menu p-2" role="menu"></div>
    {{ block('form_widget_simple') }}
{%- else -%}
    {{- parent() -}}
{%- endif -%}
{%- endblock %}

{# prepend and append icons, if applicable #}
{% block form_widget_simple -%}
{% set prepend_icon = (prepend_icon|default('') ~ ' ' ~ prepend_class|default(''))|trim %}
{% set prepend_title = prepend_title|default(false) %}
{% set append_icon = (append_icon|default('') ~ ' ' ~ append_class|default(''))|trim %}
{% set append_title = append_title|default(false) %}
{% if prepend_icon or append_icon %}
    <div class="input-group">
        {% if prepend_icon %}
        <div class="input-group-text"{% if prepend_title %} title="{{ prepend_title|trans }}"{% endif %}>
            <i class="{{ prepend_icon }}"></i>
        </div>
        {% endif %}
        {{- parent() -}}
        {% if append_icon %}
        <div class="input-group-text"{% if append_title %} title="{{ append_title|trans }}"{% endif %}>
           <i class="{{ append_icon }}"></i>
        </div>
        {% endif %}
    </div>
{% else %}
    {{- parent() -}}
{% endif %}
{%- endblock form_widget_simple %}

{# use file-input style #}
{% block file_widget -%}
{%- if thumbnail is defined and thumbnail -%}
    {%- set empty_image = empty_image|default(false) -%}
    {%- set thumbnail_src = thumbnail_src|default(false) -%}
    {%- set thumbnail_alt = thumbnail_alt|default('filetype.image') -%}
    {%- if thumbnail_src -%}{%- set attr = attr|default({})|merge({'data-src': thumbnail_src}) -%}{%- endif -%}
    <div class="text-center file-input {{ thumbnail_src ? 'file-input-exists' : 'file-input-new' }}" data-provider="file-input">
        <div class="file-input-preview img-thumbnail" data-trigger="file-input" data-default="{{ empty_image }}">
        {% if thumbnail_src or empty_image -%}
            <img src="{{ thumbnail_src|default(empty_image) }}" alt="{{ thumbnail_alt|trans }}" title="{{ thumbnail_alt|trans }}">
        {%- endif %}
        </div>
        <div class="text-start">
            <span class="btn btn-file btn-sm btn-form-sm btn-outline-secondary">
                <span class="file-input-new">{{ 'common.button_browse'|trans }}</span>
                <span class="file-input-exists">{{ 'common.button_edit'|trans }}</span>
                {%- set attr = attr|merge({'aria-label': thumbnail_alt|trans}) -%}
                {{- block('form_widget_simple') -}}
            </span>
            <button type="button" class="btn btn-sm btn-form-sm btn-outline-danger file-input-exists" data-dismiss="file-input">{{ 'common.button_delete'|trans }}</button>
        </div>
    </div>
{%- else -%}
    <div class="input-group">
        {%- set is_empty = not value -%}
        {% if is_empty %}
            {% set attr = attr|merge({class: (attr.class|default('') ~ ' rounded-end')|trim}) %}
        {% endif %}
        {{- block('form_widget_simple') }}
        <button class="btn btn-file-delete btn-outline-secondary{% if is_empty %} d-none{% endif %}" type="button" title="{{ 'common.button_delete'|trans }}">
            <i class="fa-solid fa-times"></i>
        </button>
    </div>
    {#
    {%- set placeholder = attr.placeholder is defined ? (translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans({}, translation_domain)) : false -%}
    <div class="file-input file-input-new input-group border rounded" data-provider="file-input">
        <div class="form-control" data-trigger="file-input">
            <span class="file-input-filename">{%- if placeholder -%}{{ placeholder }}{%- endif -%}</span>
        </div>
        <span class="input-group">
            <span class="input-group-text btn-file btn btn-secondary rounded-end border-end-0">
                <span class="file-input-new">{{ 'common.button_browse'|trans }}</span>
                <span class="file-input-exists">{{ 'common.button_edit'|trans }}</span>
                {%- set attr = attr|merge({'class': 'd-none'}) -%}
                {{- block('form_widget_simple') -}}
            </span>
            <span class="input-group-text file-input-exists btn btn-secondary" data-bs-dismiss="file-input" title="{{ 'common.button_delete'|trans }}">
                <i class="fa-solid fa-times"></i>
            </span>
        </span>
    </div>
    #}
{%- endif -%}
{%- endblock -%}

{# vich_image #}
{#{% block media_widget -%}#}
{#    #}{# file #}
{#    {%- set alt = 'user.image.title' -%}#}
{#    {%- set src = asset_exists(image_uri) ? asset_versioned(image_uri|trim('/', 'left')) : false -%}#}
{#    {{- form_widget(form.file, {thumbnail: true, thumbnail_src: src, thumbnail_alt: alt}) -}}#}
{#    #}{# delete #}
{#    {% if form.delete is defined -%}#}
{#        <div class="d-none">{{- form_widget(form.delete, {hidden: true, type: 'hidden'}) -}}</div>#}
{#    {%- endif %}#}
{#{%- endblock %}#}

{# vich_image #}
{% block vich_image_widget -%}
{# file #}
{%- set alt = 'user.image.title' -%}
{%- set src = asset_exists(image_uri) ? asset_versioned(image_uri|trim('/', 'left')) : false -%}
{{- form_widget(form.file, {thumbnail: true, thumbnail_src: src, thumbnail_alt: alt}) -}}
{# delete #}
{% if form.delete is defined -%}
    <div class="d-none">{{- form_widget(form.delete, {hidden: true, type: 'hidden'}) -}}</div>
{%- endif %}
{%- endblock %}

{# captcha_image #}
{% block captcha_image_widget -%}
{%- set type = type|default('text') -%}
{%- set image_title = 'captcha.title'|trans -%}
{%- if remote|default(false) -%}
    {%- set attr = attr|merge({'data-remote': remote}) -%}
{%- endif -%}
{%- if refresh|default(false) -%}
    {%- set attr = attr|merge({'data-refresh': refresh}) -%}
{%- endif -%}
{%- set attr = attr|merge({class: (attr.class|default('') ~ ' text-lowercase')|trim}) -%}
<div class="input-group">
    <span class="input-group-text py-0 px-1 bg-white">
        <img id="{{ id }}_image" class="captcha-image" alt="{{ image_title }}" title="{{ image_title }}" src="{{ image }}" width="150" height="30">
    </span>
    {{- block('form_widget_simple') -}}
    {% if refresh|default(false) %}
        <button id="{{ id }}_refresh" name="{{ id }}_refresh" class="btn btn-outline-secondary captcha-refresh" type="button" title="{{ 'captcha.refresh'|trans }}">
            <i class="fa-solid fa-sync"></i>
        </button>
    {% endif %}
</div>
{%- endblock %}

{# simple editor #}
{% block simple_editor_row -%}
    {{- block('form_row') -}}
{%- endblock %}

{% macro simple_editor_button(action) %}
{%- set translation_domain = 'messages' -%}
{%- set attr_translation_parameters = [] -%}
<button type="button"{% with {attr: action.attributes} %}{{ block('attributes') }}{% endwith %}>
    {%- if action.text|default(false) -%}
        {{- action.text|trans -}}
    {%- else -%}
        <i class="{{- 'fa-fw fa-solid fa-' ~ action.icon -}}"></i>
    {%- endif -%}
</button>
{% endmacro %}

{% block simple_editor_label -%}
{%- set element = 'span' -%}
{%- set label_attr = label_attr|merge({'class': 'cursor-default'}) -%}
{{ block('form_label') }}
{%- endblock %}

{% block simple_editor_widget -%}
{%- set type = type|default('hidden') -%}
{%- set editor_id = form.vars.id ~ '_editor' -%}
{%- set actions = form.vars.actions|default([]) -%}
<div class="simple-editor form-control p-0" id="{{ editor_id }}">
    {% if groups|default([])|length -%}
    <div class="simple-editor-toolbar btn-toolbar rounded-top d-print-none" role="toolbar">
        {% for group, actions in groups %}
        <div class="btn-group btn-group-sm" role="group" aria-label="{{ group }}">
        {% for action in actions %}
            {% if action.actions|default([])|length %}
            <div class="btn-group btn-group-sm" role="group">
                {{ _self.simple_editor_button(action) }}
                <div class="dropdown-menu">
                {% for child in action.actions %}
                    {{ _self.simple_editor_button(child) }}
                {% endfor %}
                </div>
            </div>
            {% else %}
                {{ _self.simple_editor_button(action) }}
            {% endif %}
        {% endfor %}
        {% if not loop.last %}<div class="border-start separator"></div>{% endif %}
        </div>
        {% endfor %}
    </div>
    {%- endif %}
    <div class="simple-editor-content border-top" contenteditable="true"></div>
    {{- block('form_widget_simple') -}}
</div>
{%- endblock %}

{%- block alpha_captcha_widget -%}
<div class="row align-items-center">
    <label for="{{ id }}" class="col-sm-10 col-form-label">
        {{- question -}}
    </label>
    <div class="col-sm-2 col-3">
        {{- block('form_widget_simple') -}}
    </div>
</div>
{%- endblock -%}

{% block form_errors -%}
    {%- if errors|length > 0 -%}
        <span class="{% if form is not rootform %}invalid-feedback{% else %}alert alert-danger{% endif %} d-block">
            <span class="d-block">
            {{ errors[0].message }}
            </span>
{#            {%- for error in errors -%}#}
{#                <span class="d-block">#}
{#                    <span class="form-error-message">{{ error.message }}</span>#}
{#                </span>#}
{#            {%- endfor -%}#}
        </span>
    {%- endif %}
{%- endblock form_errors %}

{# overrides button_widget to add icon parameter @see \Talav\WebBundle\Form\Extension\ButtonTypeIconExtension #}
{% block button_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' btn')|trim}) %}
    {% if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}
    {% if icon|default %}
        {% set iconHtml = '<i class="fas ' ~ icon ~ '"></i> ' %}
    {% else %}
        {% set iconHtml = '' %}
    {% endif %}
    <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ iconHtml|raw }}{{ translation_domain is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) }}</button>
{%- endblock button_widget %}

{# overrides textarea_widget to catch array to string conversion issues when a form returns with errors #}
{%- block textarea_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    <textarea {{ block('widget_attributes') }}>{{ value is iterable ? value|join("\n") : value }}</textarea>
{%- endblock textarea_widget -%}










{# Output label as HTML #}
{#{%- block form_label -%}#}
{#    {%- if label is not same as(false) -%}#}
{#        {%- set label %}zzz{{ label|raw }}{% endset -%}#}
{#        {{ parent() }}#}
{#    {%- endif -%}#}
{#{%- endblock form_label -%}#}

{#{% block form_label -%}#}
{#    {%- set label_attr = label_attr|merge({class: (label_attr.class|default(''))|trim}) -%}#}
{#    {{- parent() -}}#}
{#{%- endblock form_label %}#}

{#{% block checkbox_row -%}#}
{#    <div class="mb-3 form-group mb-0{% if not valid %} has-error{% endif %}">#}
{#        {{- form_widget(form) -}}#}
{#        {{- form_label(form) -}}#}
{#        {{- form_errors(form) -}}#}
{#    </div>#}
{#{%- endblock checkbox_row %}#}

{#{% block checkbox_widget -%}#}
{#    <div class="form-check form-switch">#}
{#    <input type="checkbox" class="form-check-input"{{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} {% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}/>#}
{#{%- endblock checkbox_widget %}#}

{# Checkbox label is raw here #}
{#{%- block checkbox_label -%}#}
{#    {% if label is not same as(false) -%}#}
{#        {% if not compound -%}#}
{#            {% set label_attr = label_attr|merge({'for': id}) %}#}
{#        {%- endif -%}#}
{#        {% if required -%}#}
{#            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}#}
{#        {%- endif -%}#}
{#        {% if label is empty -%}#}
{#            {%- if label_format is not empty -%}#}
{#                {% set label = label_format|replace({#}
{#                    '%name%': name,#}
{#                    '%id%': id,#}
{#                }) %}#}
{#            {%- else -%}#}
{#                {% set label = name|humanize %}#}
{#            {%- endif -%}#}
{#        {%- endif -%}#}
{#        <span>{{ translation_domain is same as(false) ? label|raw : label|trans({}, translation_domain)|raw }}</span>#}
{#    {%- endif -%}#}
{#{%- endblock -%}#}

{#{% block switch_label -%}#}
{#    #}{#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
{#    {%- if widget is defined -%}#}
{#        {%- if checked and form.parent.vars.valid == false -%}#}
{#            {%- set valid = false -%}#}
{#        {%- endif -%}#}
{#        {%- set label_attr_class = (valid ? block('class_input_radio_label') : block('class_input_radio_label_error')) ~ ' ' ~ label_attr.class|default('') -%}#}
{#        {%- set label_attr = label_attr|merge({class: block('class_input_switch_label')}) -%}#}
{#        {%- if not compound -%}#}
{#            {%- set label_attr = label_attr|merge({'for': id}) -%}#}
{#        {%- endif -%}#}
{#        <label{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>#}
{#            {{ widget|raw }}#}
{#            <div class="{{ block('class_input_switch') }}"></div>#}
{#            {%- if label is not same as(false) -%}#}
{#                <span class="{{ label_attr_class|trim }}">#}
{#                    {{- block('form_label_content') -}}#}
{#                </span>#}
{#            {%- endif -%}#}
{#        </label>#}
{#    {%- endif -%}#}
{#{%- endblock switch_label %}#}


{# Labels #}

{%- block form_label -%}
    {% if label is not same as(false) -%}
        {%- set label_attr_class = (valid ? block('class_label') : block('class_label_error')) ~ ' ' ~ label_attr.class|default('') -%}
        {%- set label_attr = label_attr|merge({class: label_attr_class|trim}) -%}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        <{{ element|default('label') }}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
        {{- block('form_label_content') -}}
        </{{ element|default('label') }}>
    {%- endif -%}
{%- endblock form_label -%}

{%- block checkbox_radio_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
        {%- if checked and form.parent.vars.valid == false -%}
            {%- set valid = false -%}
        {%- endif -%}
        {%- set label_attr_class = (valid ? block('class_input_radio_label') : block('class_input_radio_label_error')) ~ ' ' ~ label_attr.class|default('') -%}
        {%- set label_attr = label_attr|merge({'class': label_attr_class|trim}) -%}
        {%- if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        <div class="flex items-center mr-4">
            {{ widget|raw }}
            <label{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
                {%- if label is not same as(false) -%}
                    {{ translation_domain is same as(false) ? label|raw : label|trans({}, translation_domain)|raw }}
                {%- endif -%}
            </label>
        </div>
    {%- endif -%}
{%- endblock checkbox_radio_label %}

{% block checkbox_label -%}
    {{- block('checkbox_radio_label') -}}
{%- endblock checkbox_label %}

{% block radio_label -%}
    {{- block('checkbox_radio_label') -}}
{%- endblock radio_label %}

{% block switch_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
        {%- if checked and form.parent.vars.valid == false -%}
            {%- set valid = false -%}
        {%- endif -%}
        {%- set label_attr_class = (valid ? block('class_input_radio_label') : block('class_input_radio_label_error')) ~ ' ' ~ label_attr.class|default('') -%}
        {%- set label_attr = label_attr|merge({class: block('class_input_switch_label')}) -%}
        {%- if not compound -%}
            {%- set label_attr = label_attr|merge({'for': id}) -%}
        {%- endif -%}
        <label{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}>
            {{ widget|raw }}
            <div class="{{ block('class_input_switch') }}"></div>
            {%- if label is not same as(false) -%}
                <span class="{{ label_attr_class|trim }}">
                    {{- block('form_label_content') -}}zzz
                </span>
            {%- endif -%}
        </label>
    {%- endif -%}
{%- endblock switch_label %}





{# Class #}

{% block class_label -%}
    block mb-2 text-sm font-medium text-gray-900 dark:text-white
{%- endblock class_label %}

{% block class_input_radio_label -%}
    ml-2 text-sm font-medium text-gray-900 dark:text-gray-300
{%- endblock class_input_radio_label %}

{% block class_input_switch_label -%}
    relative inline-flex items-center cursor-pointer
{%- endblock class_input_switch_label %}

{% block class_input_text -%}
    text-gray-900 bg-gray-50 rounded-lg text-sm block w-full p-2.5 border border-gray-300 focus:z-10 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500
{%- endblock class_input_text %}

{% block class_input_range -%}
    w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700
{%- endblock class_input_range %}

{% block class_input_file -%}
    block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400
{%- endblock class_input_file %}

{% block class_input_radio -%}
    w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600
{%- endblock class_input_radio %}

{% block class_input_checkbox -%}
    rounded {{ block('class_input_radio') }}
{%- endblock class_input_checkbox %}

{% block class_input_switch -%}
    w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-2 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 dark:bg-gray-700 dark:border-gray-600 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600
{%- endblock class_input_switch %}

{% block class_select -%}
    {{ block('class_input_text') }}
{%- endblock class_select %}

{% block class_textarea -%}
    {{ block('class_input_text') }}
{%- endblock class_textarea %}

{% block class_button -%}
    text-gray-900 bg-white font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 border border-gray-200 hover:text-blue-700 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:bg-gray-800 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700
{%- endblock class_button %}

{% block class_submit -%}
    text-white bg-blue-700 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800
{%- endblock class_submit %}

{% block class_time_separator -%}
    inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-x-0 border-gray-300 dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600
{%- endblock class_time_separator %}

{% block class_addon -%}
    inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-gray-300 dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600
{%- endblock class_addon %}

{% block class_widget_addon_prepend -%}
    rounded-none rounded-l-lg
{%- endblock class_widget_addon_prepend %}

{% block class_widget_addon_append -%}
    rounded-none rounded-r-lg
{%- endblock class_widget_addon_append %}

{% block class_addon_prepend -%}
    border-r-0 rounded-l-md
{%- endblock class_addon_prepend %}

{% block class_addon_append -%}
    border-l-0 rounded-r-md
{%- endblock class_addon_append %}

{% block class_help_text -%}
    mt-2 text-sm text-gray-500 dark:text-gray-400
{%- endblock class_help_text %}

{% block class_label_error -%}
    block mb-2 text-sm font-medium text-red-600 dark:text-red-500
{%- endblock class_label_error %}

{% block class_input_radio_label_error -%}
    ml-2 text-sm font-medium text-red-600 dark:text-red-500
{%- endblock class_input_radio_label_error %}

{% block class_input_error -%}
    text-red-900 bg-red-50 border-red-500 placeholder-red-700 dark:bg-red-100 dark:border-red-400 dark:text-red-900 focus:z-10 focus:ring-red-500 focus:border-red-500 dark:focus:ring-red-500 dark:focus:border-red-500
{%- endblock class_input_error %}

{% block class_text_error -%}
    mt-2 text-sm text-red-600 dark:text-red-500
{%- endblock class_text_error %}




{#{% block radio_widget %}#}
{#        <input type="radio" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} title="" />#}
{#{% endblock radio_widget %}#}
{#{% block radio_widget -%}#}
{#    {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}#}
{#    {%- if 'radio-custom' in parent_label_class -%}#}
{#        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}#}
{#        <div class="custom-control custom-radio{{ 'radio-inline' in parent_label_class ? ' custom-control-inline' }}">#}
{#            {{- form_label(form, null, { widget: parent() }) -}}#}
{#        </div>#}
{#    {%- else -%}#}
{#        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-check-input')|trim}) -%}#}
{#        <div class="form-check{{ 'radio-inline' in parent_label_class ? ' form-check-inline' }}">#}
{#            {{- form_label(form, null, { widget: parent() }) -}}#}
{#        </div>#}
{#    {%- endif -%}#}
{#{%- endblock radio_widget %}#}










{#{%- block choice_widget_expanded -%}#}
{#    {%- set attr = attr|merge({ class: attr.class|default('mt-2') }) -%}#}
{#    <div {{ block('widget_container_attributes') }}>#}
{#        {%- for child in form %}#}
{#            <div class="flex items-center">#}
{#                {{- form_widget(child) -}}#}
{#                {{- form_label(child, null, { translation_domain: choice_translation_domain }) -}}#}
{#            </div>#}
{#        {% endfor -%}#}
{#    </div>#}
{#{%- endblock choice_widget_expanded -%}#}

{#{%- block checkbox_row -%}#}
{#    {%- set row_attr = row_attr|merge({ class: row_attr.class|default(row_class|default('mb-6')) }) -%}#}
{#    {%- set widget_attr = {} -%}#}
{#    {%- if help is not empty -%}#}
{#        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}#}
{#    {%- endif -%}#}
{#    <div{% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>#}
{#        {{- form_errors(form) -}}#}
{#        <div class="inline-flex items-center">#}
{#            {{- form_widget(form, widget_attr) -}}#}
{#            {{- form_label(form) -}}#}
{#        </div>#}
{#        {{- form_help(form) -}}#}
{#    </div>#}
{#{%- endblock checkbox_row -%}#}

{#{%- block checkbox_widget -%}#}
{#    {%- set widget_class = widget_class|default('mr-2') -%}#}
{#    {{- parent() -}}#}
{#{%- endblock checkbox_widget -%}#}

{#{%- block radio_widget -%}#}
{#    {%- set widget_class = widget_class|default('mr-2') -%}#}
{#    {{- parent() -}}#}
{#{%- endblock radio_widget -%}#}
