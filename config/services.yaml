# Put parameters here that don't need to change on each machine where the application is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    translation_domain: 'TalavWebBundle'

    # fixed
    locale:             en
    app_name:           Calculation
    app_version:        3.0.0
    app_owner:          bibi.nu
    app_owner_url:      https://www.bibi.nu
    app_owner_city:     Mont√©vraz
    app_description:    Programme de calculation.

    app_secret:         '%env(string:APP_SECRET)%'
    app_mode:           '%env(string:APP_MODE)%'

    # mailer
    mailer_user_name: Calculation
    mailer_user_email: calculation@bibi.nu

    # cookies
    cookie_path: '%env(string:COOKIE_PATH)%'

    # keys
    google_translator_key: '%env(string:GOOGLE_TRANSLATOR_KEY)%'
    google_recaptcha_secret_key: '%env(string:GOOGLE_RECAPTCHA_SECRET_KEY)%'
    google_recaptcha_site_key: '%env(string:GOOGLE_RECAPTCHA_SITE_KEY)%'

    #links
    link_dev: '%env(string:LINK_DEV)%'
    link_prod: '%env(string:LINK_PROD)%'

    # optimize
    .container.dumper.inline_factories: true

    # the date format for log
    log_date_format: 'd.m.Y H:i:s.v'

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Groshy\:
        resource: '../src/'
        exclude:
            - '../src/Config/'
            - '../src/Controller/'
            - '../src/Repository/'
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Groshy\Api\Action\:
        resource: '../src/Api/Action'
        tags: ['controller.service_arguments']
    Groshy\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    Groshy\Menu\SidebarMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: createAssetSidebarMenu, alias: asset_sidebar_menu }
            - { name: knp_menu.menu_builder, method: createLiabilitiesSidebarMenu, alias: liability_sidebar_menu }
    Groshy\Menu\BreadcrumbsMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: buildDashboardMenu, alias: breadcrumbs_dashboard }
            - { name: knp_menu.menu_builder, method: buildAssetTypeMenu, alias: breadcrumbs_asset_type }
            - { name: knp_menu.menu_builder, method: buildPositionMenu, alias: breadcrumbs_position }
    Groshy\Routing\DateParamRouter:
        decorates: 'router'
        arguments: ['@Groshy\Routing\DateParamRouter.inner']
