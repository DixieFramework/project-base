security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_provider:
            id: talav.user.provider.oath

    role_hierarchy:
        ROLE_MODERATOR: ROLE_USER
        ROLE_SUPER_MODERATOR: ROLE_MODERATOR

        ROLE_ADMIN:       ROLE_SUPER_MODERATOR
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: user_provider
            pattern: ^/
            entry_point: Talav\UserBundle\Security\UserFormAuthenticator
            custom_authenticators:
                - Talav\UserBundle\Security\UserFormAuthenticator
#            entry_point: form_login
            switch_user: true

            form_login:
                post_only: true
                login_path: talav_user_login
                check_path: talav_user_login
#                default_target_path: groshy_frontend_dashboard_dashboard
                default_target_path: home_page
                username_parameter: talav_type_user_user_login[username]
                password_parameter: talav_type_user_user_login[password]
                enable_csrf: true
                csrf_parameter: _token

            login_link:
                check_route: authentication_login_link_check
                signature_properties: [ id, email ]
                max_uses: 3
                lifetime: 600

            logout:
                path: talav_user_logout
                target: talav_user_login

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 2592000
            oauth:
                resource_owners:
                    facebook: "/social-login/check-facebook"
                ## Provide the original login path of your application
                ## and the failure route when the authentication fails.
                login_path:     /login
                failure_path:   /login
                oauth_user_provider:
                    service: talav.user.provider.oath
    password_hashers:
        Talav\UserBundle\Entity\User:
            algorithm: auto
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: PUBLIC_ACCESS }
        - { path: ^/user/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
